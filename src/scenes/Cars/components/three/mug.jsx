/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: LightSwitch (https://sketchfab.com/edwardlewis450)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/plain-mug-19c8fe5702b544d0a1409d3dac1cf90e
title: Plain Mug
*/

import React, { useRef, useState } from 'react';
import { useGLTF, useTexture, useCubeTexture, Decal } from '@react-three/drei';
import { TextureLoader } from 'three';
import { useFrame, useLoader } from 'react-three-fiber';
import * as THREE from 'three';

import texture3 from './dog.jpg';

export default function Model(props) {
  const { position, texture } = props;
  const { nodes, materials } = useGLTF('/models/mug/model-mug-transformed.glb');
  const colormap3 = useLoader(TextureLoader, texture);
  // colormap3.wrapS = THREE.RepeatWrapping;
  colormap3.repeat.set(2, 2);
  colormap3.offset.set(0.25, -1);
  colormap3.center.set(0, 0);
  colormap3.magFilter = THREE.LinearFilter;
  colormap3.minFilter = THREE.LinearMipMapNearestFilter;
  colormap3.needsUpdate = true;

  const mugTexture = useTexture({
    map: texture3,
  });

  function LoopOverInstance({ children, buffer }) {
    const [m] = useState(() => new THREE.Matrix4());
    return (
      buffer &&
      [...new Array(buffer.count)].map((_, i) => {
        const p = new Vector3();
        const q = new Quaternion();
        const r = new Euler();
        const s = new Vector3();

        m.fromArray(buffer.array, i * 16);
        m.decompose(p, q, s);
        r.setFromQuaternion(q);

        return children({ key: i, position: p, rotation: r, scale: s });
      })
    );
  }

  return (
    <group {...props} dispose={null} scale={5} position={position}>
      <group rotation={[-Math.PI / 2, 0, -1]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_2.geometry}
          material={materials['Material.001']}
        >
          <meshStandardMaterial map={colormap3} />
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload('/models/mug/model-mug-transformed.glb');
